import { useConversationStore } from '@/store/conversationStore';
import { FileText, Download, Play, Settings } from 'lucide-react';

const PreviewPanel = () => {
  const { conversationState } = useConversationStore();

  const generateYamlPreview = () => {
    const yaml = `# SDD Specification
# Generated by Interactive Builder

scenarios:
${conversationState.scenarios.map(scenario => `  - scenario: ${scenario.title}
    given: ${scenario.given}
    when: ${scenario.when}
    then: ${scenario.then}`).join('\n')}

${conversationState.constraints.length > 0 ? `constraints:
${conversationState.constraints.map(constraint => `  ${constraint.category}:
    - name: ${constraint.name}
      requirement: ${constraint.requirement}
      priority: ${constraint.priority}`).join('\n')}` : ''}`;
    
    return yaml;
  };

  const downloadSpecification = () => {
    const yaml = generateYamlPreview();
    const blob = new Blob([yaml], { type: 'text/yaml' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'specification.yaml';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="h-full flex flex-col">
      {/* Header */}
      <div className="p-3 md:p-4 border-b border-border bg-muted/50">
        <h3 className="font-medium">Preview & Actions</h3>
        <p className="text-xs md:text-sm text-muted-foreground">
          Specification preview and controls
        </p>
      </div>

      {/* Progress indicator */}
      <div className="p-3 md:p-4 border-b border-border">
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-medium">Progress</span>
          <span className="text-sm text-muted-foreground">
            {conversationState.progress_score}%
          </span>
        </div>
        <div className="w-full bg-muted rounded-full h-2">
          <div
            className="bg-primary h-2 rounded-full transition-all duration-300"
            style={{ width: `${conversationState.progress_score}%` }}
          />
        </div>
        <div className="flex justify-between text-xs text-muted-foreground mt-1">
          <span>Discovery</span>
          <span>Building</span>
          <span>Complete</span>
        </div>
      </div>

      {/* Content */}
      <div className="flex-1 overflow-y-auto">
        {conversationState.scenarios.length === 0 ? (
          <div className="p-3 md:p-4 text-center">
            <FileText className="w-12 h-12 mx-auto mb-4 text-muted-foreground" />
            <h3 className="font-medium mb-2">No content yet</h3>
            <p className="text-sm text-muted-foreground">
              Start describing your system in the chat to see a preview here
            </p>
          </div>
        ) : (
          <div className="p-3 md:p-4 space-y-4">
            {/* Quick stats */}
            <div className="grid grid-cols-2 gap-2 md:gap-3">
              <div className="p-3 rounded-md bg-muted">
                <div className="text-lg font-semibold">
                  {conversationState.scenarios.length}
                </div>
                <div className="text-xs text-muted-foreground">Scenarios</div>
              </div>
              <div className="p-3 rounded-md bg-muted">
                <div className="text-lg font-semibold">
                  {conversationState.discovered_entities.length}
                </div>
                <div className="text-xs text-muted-foreground">Entities</div>
              </div>
              <div className="p-3 rounded-md bg-muted">
                <div className="text-lg font-semibold">
                  {conversationState.constraints.length}
                </div>
                <div className="text-xs text-muted-foreground">Constraints</div>
              </div>
              <div className="p-3 rounded-md bg-muted">
                <div className="text-lg font-semibold">
                  {conversationState.phase}
                </div>
                <div className="text-xs text-muted-foreground">Phase</div>
              </div>
            </div>

            {/* Specification preview */}
            <div>
              <h4 className="font-medium mb-2">YAML Preview</h4>
              <div className="bg-muted rounded-md p-3 text-sm font-mono overflow-x-auto">
                <pre className="whitespace-pre-wrap text-xs">
                  {generateYamlPreview()}
                </pre>
              </div>
            </div>

            {/* Actions */}
            <div className="space-y-2">
              <h4 className="font-medium">Actions</h4>
              
              <button
                onClick={downloadSpecification}
                className="w-full flex items-center gap-2 px-3 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
              >
                <Download className="w-4 h-4" />
                Download YAML
              </button>

              <button
                disabled
                className="w-full flex items-center gap-2 px-3 py-2 text-sm bg-muted text-muted-foreground rounded-md cursor-not-allowed"
              >
                <Play className="w-4 h-4" />
                Generate Code (Coming Soon)
              </button>

              <button
                disabled
                className="w-full flex items-center gap-2 px-3 py-2 text-sm bg-muted text-muted-foreground rounded-md cursor-not-allowed"
              >
                <Settings className="w-4 h-4" />
                Advanced Settings (Coming Soon)
              </button>
            </div>

            {/* Validation status */}
            {conversationState.clarifications_needed.length > 0 && (
              <div>
                <h4 className="font-medium mb-2 text-amber-600">
                  Needs Clarification
                </h4>
                <div className="space-y-1">
                  {conversationState.clarifications_needed.map((clarification, index) => (
                    <div
                      key={index}
                      className="text-sm p-2 bg-amber-50 border border-amber-200 rounded-md"
                    >
                      {clarification}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default PreviewPanel;